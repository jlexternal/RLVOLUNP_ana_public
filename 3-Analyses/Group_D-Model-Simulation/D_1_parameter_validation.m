% parameter_validation

% Type:         Script
% Level:        1
% Group:        D
% Usage:        Validate the model parameters via shuffled matrices
% Study:        RLVOLUNP
%
% Jun Seok Lee  - <jlexternal@gmail.com> - September 2021

clear all

if ~exist('../out/pars.mat','file')
    error("File containing parameters from first study missing from /out/ directory!");
end

load ../out/pars.mat % loads pars.mat

ind     = ~isnan(pars(:,1,1));
ns      = sum(ind);
np      = size(pars,2);
rholim  = .05; % measure of decorrelatedness desired

% shuffle the fitted parameter matrix
if ~exist('../out/pars_shuffled.mat','file')
    xhat    = nan(size(pars)); % shuffled parameter matrix
    
    for icond = 1:3
        fprintf('\nShuffling parameter matrix for condition %d\n',icond);

        x           = pars(ind,:,icond); % original parameter matrix
        toshuffle   = true;
        itry        = 0;
        % this can take some time depending on the value of rholim
        while toshuffle
            % shuffle parameter matrix
            for ipar = 1:np
                xhat(ind,ipar,icond) = x(randperm(ns),ipar);
            end

            if isequal(~eye(4),abs(corr(xhat(ind,:,icond),'Type','Spearman'))<rholim)
                toshuffle = false;
            end
            itry = itry + 1;
            if mod(itry,1e4) == 0
                fprintf('%d shuffles have been made...\n',itry);
            end
        end
        fprintf('Parameter shuffling finished.\n');
    end
    save('pars_shuffled.mat','xhat');
    
    % ----------------------- IMPORTANT -----------------------
    %
    % After pars_shuffled.mat is created, simulate the model with the shuffled
    % parameters on each subject to generate simulated data. Then refit the model on
    % that data to obtain fitted parameters.
    %
    % Organize a matrix in the same way as with the fitted parameters on real data
    % and save that file as 'pars_shuffled_fits.mat'
    %
    % ---------------------------------------------------------
else
    load ../out/pars_shuffled.mat % loads xhat
end


%% 1/ Correlation (shuffled parameters)
load ../out/pars.mat     % loads pars
load ../out/pars_shuffled    % loads xhat

ind     = ~isnan(pars(:,1,1));
ns      = sum(ind);
np      = size(pars,2);

% this section requires the parameters fitting the model on the simulated data
% generated by the shuffled parameter sims
condstr = {'REF','VOL','UNP'};
parstr = {'alpha','delta','zeta','tau'};
% 1/ correlate the shuffled parameters to themselves
figure(1);
clf;
for icond = 1:3
    [rho_xhat p_xhat] = corr(xhat(ind,:,icond),'Type','Spearman');
    
    subplot(1,3,icond)
    imagesc(rho_xhat);
    colormap('jet');
    caxis([-1 1]);
    colorbar;
    xticks(1:4);
    yticks(1:4);
    set(gca,'XTickLabels',parstr);
    set(gca,'YTickLabels',parstr);
    set(gca,'FontSize',14);
    for ipar = 1:4
        for jpar = 1:4
            if abs(rho_xhat(ipar,jpar)) > 0.6
                txtrgb = [1 1 1];
            else
                txtrgb = [0 0 0];
            end
            text(ipar,jpar,sprintf('%.03f',rho_xhat(ipar,jpar)),'HorizontalAlignment','center','FontSize',14,'Color',txtrgb);
        end
    end
    title(sprintf('%s',condstr{icond}));
end
sgtitle('Correlation matrix (shuffled parameters)','FontSize',18);

%% 2/ Correlate the the fitted parameters (from the generated behavior from shuffled params) to the shuffled parameters
if ~exist('../out/pars_shuffled_fits.mat','file')
    error('Fits from behavior generated by the model with shuffled paramters not found! See line 53.')
end
load ../out/pars_shuffled_fits

figure
for icond = 1:3
    [rho_comp p_comp] = corr(xhat(ind,:,icond),sim_fit_pars(ind,:,icond),'Type','Spearman');
    
    subplot(1,3,icond)
    imagesc(rho_comp);
    colormap('jet');
    caxis([-1 1]);
    colorbar;
    xticks(1:4);
    yticks(1:4);
    set(gca,'XTickLabels',parstr);
    set(gca,'YTickLabels',parstr);
    set(gca,'FontSize',14);
    for ipar = 1:4
        for jpar = 1:4
            if abs(rho_comp(ipar,jpar)) > 0.6
                txtrgb = [1 1 1];
            else
                txtrgb = [0 0 0];
            end
            text(ipar,jpar,sprintf('%.03f',rho_comp(ipar,jpar)),'HorizontalAlignment','center','FontSize',14,'Color',txtrgb);
        end
    end
    xlabel('Parameters (from shuffled)');
    if icond == 1
        ylabel('Parameters (frecovered)');
    end
    title(sprintf('%s',condstr{icond}));
end
sgtitle('Correlation matrix (shuffled parameters to their fits)','FontSize',18);

%% 3/ correlate the fitted parameters to themselves
if ~exist('../out/pars_shuffled_fits.mat','file')
    error('Fits from behavior generated by the model with shuffled paramters not found! See line 53.')
end
load ../out/pars_shuffled_fits

figure
for icond = 1:3
    [rho_fit p_fit] = corr(sim_fit_pars(ind,:,icond),'Type','Spearman');
    
    subplot(1,3,icond)
    imagesc(rho_fit);
    colormap('jet');
    caxis([-1 1]);
    colorbar;
    xticks(1:4);
    yticks(1:4);
    set(gca,'XTickLabels',parstr);
    set(gca,'YTickLabels',parstr);
    set(gca,'FontSize',14);
    for ipar = 1:4
        for jpar = 1:4
            if abs(rho_fit(ipar,jpar)) > 0.6
                txtrgb = [1 1 1];
            else
                txtrgb = [0 0 0];
            end
            text(ipar,jpar,sprintf('%.03f',rho_fit(ipar,jpar)),'HorizontalAlignment','center','FontSize',14,'Color',txtrgb);
        end
    end
    title(sprintf('%s',condstr{icond}));
end
sgtitle('Correlation matrix (fit parameters (from shuffled))','FontSize',18);




